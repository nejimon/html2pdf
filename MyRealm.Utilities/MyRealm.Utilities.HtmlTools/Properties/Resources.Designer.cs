//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyRealm.Utilities.HtmlTools.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MyRealm.Utilities.HtmlTools.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * @license AngularJS v1.2.6
        /// * (c) 2010-2014 Google, Inc. http://angularjs.org
        /// * License: MIT
        /// */
        ///(function(window, document, undefined) {&apos;use strict&apos;;
        ///
        ////**
        /// * @description
        /// *
        /// * This object provides a utility for producing rich Error messages within
        /// * Angular. It can be called as follows:
        /// *
        /// * var exampleMinErr = minErr(&apos;example&apos;);
        /// * throw exampleMinErr(&apos;one&apos;, &apos;This {0} is {1}&apos;, foo, bar);
        /// *
        /// * The above creates an instance of minErr in the example namespace. The
        /// * resulting error will have a na [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string angular {
            get {
                return ResourceManager.GetString("angular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] phantomjs {
            get {
                object obj = ResourceManager.GetObject("phantomjs", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///var page = require(&apos;webpage&apos;).create(),
        ///    system = require(&apos;system&apos;),
        ///    address, output, size;
        ///
        ///if (system.args.length &lt; 3 || system.args.length &gt; 5) {
        ///    console.log(&apos;Usage: rasterize.js URL filename [paperwidth*paperheight|paperformat] [zoom]&apos;);
        ///    console.log(&apos;  paper (pdf output) examples: &quot;5in*7.5in&quot;, &quot;10cm*20cm&quot;, &quot;A4&quot;, &quot;Letter&quot;&apos;);
        ///    console.log(&apos;  image (png/jpg output) examples: &quot;1920px&quot; entire page, window width 1920px&apos;);
        ///    console.log(&apos;                                   &quot;800px*600px&quot; wi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string rasterize {
            get {
                return ResourceManager.GetString("rasterize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var page = require(&apos;webpage&apos;).create();
        ///var system = require(&apos;system&apos;);
        ///var fs = require(&apos;fs&apos;);
        ///
        ///var address = null;
        ///var output = null;
        ///var idToSave = null;
        ///
        ///if (system.args.length &gt;= 3){
        ///    address = system.args[1];
        ///    output = system.args[2];
        ///}else {
        ///    console.log(&apos;At least source and target address should be given.&apos;);
        ///    phantom.exit(1);
        ///}
        ///    
        ///if(system.args.length &gt;= 4)
        ///    idToSave = system.args[3];
        ///
        ///console.log(address);
        ///console.log(output);
        ///console.log(idToSave);
        ///
        ///page.open(address, funct [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string savepage {
            get {
                return ResourceManager.GetString("savepage", resourceCulture);
            }
        }
    }
}
